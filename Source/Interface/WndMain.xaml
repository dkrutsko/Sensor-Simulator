<!--///////////////////////////////////////////////////////////////////////
// ===================================================================== //
//                                                                       //
//   Project: Sensor Simulator                                           //
//  Filename: WndMain.xaml                                               //
//                                                                       //
// ===================================================================== //
////////////////////////////////////////////////////////////////////////-->

<Window
	x:Class = "Simulator.WndMain"
	xmlns:l = "clr-namespace:Simulator"
	xmlns   = "http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x = "http://schemas.microsoft.com/winfx/2006/xaml"
	
	Title="Sensor Simulator" Width="1024" Height="768" MinWidth="1024" MinHeight="768"
	Loaded="WindowLoaded" KeyDown="ActionKeyDown" ResizeMode="CanResize" Focusable="False">
	
	
	
	<!--///////////////////////////////////////////////////////////////////////
	// Resources                                                             //
	////////////////////////////////////////////////////////////////////////-->
	
	<Window.Resources>
		
		<!--///////////////////////////////////////////////////////////////////////
		// Brushes                                                               //
		////////////////////////////////////////////////////////////////////////-->
		
		<SolidColorBrush x:Key="uiBrushNormal"	Color="#A0000000" />
		<SolidColorBrush x:Key="uiBrushOver"	Color="#D0000000" />
		
		
		
		<!--///////////////////////////////////////////////////////////////////////
		// Chromeless Button                                                     //
		////////////////////////////////////////////////////////////////////////-->
		
		<Style x:Key="uiStyleChromelessButton" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource uiStyleBase}">
			
			<Setter Property="Padding"			Value="1"					/>
			<Setter Property="Background"		Value="Transparent"			/>
			<Setter Property="Foreground"		Value="Transparent"			/>
			<Setter Property="BorderThickness"	Value="1"					/>
			
			<Setter Property="VerticalContentAlignment"		Value="Center"	/>
			<Setter Property="HorizontalContentAlignment"	Value="Center"	/>
			
			
			
			<!-- Template -->
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						
						<Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
							<ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"
											  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											  VerticalAlignment  ="{TemplateBinding VerticalContentAlignment}"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
						</Grid>
						
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		
		
		
		<!--///////////////////////////////////////////////////////////////////////
		// Show Dialog Storyboard                                                //
		////////////////////////////////////////////////////////////////////////-->
		
		<Storyboard x:Key="uiStoryboardShowDlg">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
				<EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" />
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
					<EasingDoubleKeyFrame.EasingFunction>
						<CircleEase EasingMode="EaseOut" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
			
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
				<EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="15" />
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
					<EasingDoubleKeyFrame.EasingFunction>
						<CircleEase EasingMode="EaseOut"/>
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		
		
		
		<!--///////////////////////////////////////////////////////////////////////
		// Hide Dialog Storyboard                                                //
		////////////////////////////////////////////////////////////////////////-->
		
		<Storyboard x:Key="uiStoryboardHideDlg">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
				<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
					<EasingDoubleKeyFrame.EasingFunction>
						<CircleEase EasingMode="EaseOut" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		
		
		
		<!--///////////////////////////////////////////////////////////////////////
		// Show Icon Storyboard                                                  //
		////////////////////////////////////////////////////////////////////////-->
	
		<Storyboard x:Key="uiStoryboardShowIcon">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
				<EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0.8">
					<EasingDoubleKeyFrame.EasingFunction>
						<CircleEase EasingMode="EaseOut" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		
		
		
		<!--///////////////////////////////////////////////////////////////////////
		// Hide Icon Storyboard                                                  //
		////////////////////////////////////////////////////////////////////////-->
	
		<Storyboard x:Key="uiStoryboardHideIcon">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
				<EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0.0">
					<EasingDoubleKeyFrame.EasingFunction>
						<CircleEase EasingMode="EaseOut" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		
		
		
		<!--///////////////////////////////////////////////////////////////////////
		// Show Menu Storyboard                                                  //
		////////////////////////////////////////////////////////////////////////-->
		
		<Storyboard x:Key="uiStoryboardShowMenu">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
				<EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0">
					<EasingDoubleKeyFrame.EasingFunction>
						<CircleEase EasingMode="EaseOut" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		
		
		
		<!--///////////////////////////////////////////////////////////////////////
		// Hide Menu Storyboard                                                  //
		////////////////////////////////////////////////////////////////////////-->
		
		<Storyboard x:Key="uiStoryboardHideMenu">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
				<EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="75">
					<EasingDoubleKeyFrame.EasingFunction>
						<CircleEase EasingMode="EaseOut" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		
		
		
		<!--///////////////////////////////////////////////////////////////////////
		// Show Modify Storyboard                                                //
		////////////////////////////////////////////////////////////////////////-->
		
		<Storyboard x:Key="uiStoryboardShowModify">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
				<EasingDoubleKeyFrame KeyTime="0:0:0" Value="-50"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0">
					<EasingDoubleKeyFrame.EasingFunction>
						<CircleEase EasingMode="EaseOut" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
			
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
				<EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1.0" />
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		
		
		
		<!--///////////////////////////////////////////////////////////////////////
		// Hide Menu Storyboard                                                  //
		////////////////////////////////////////////////////////////////////////-->
		
		<Storyboard x:Key="uiStoryboardHideModify">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
				<EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0.0">
					<EasingDoubleKeyFrame.EasingFunction>
						<CircleEase EasingMode="EaseOut" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		
	</Window.Resources>
	
	
	
	<!--///////////////////////////////////////////////////////////////////////
	// Main                                                                  //
	////////////////////////////////////////////////////////////////////////-->
	
	<Grid SnapsToDevicePixels="True">
		
		<Label Name="uiMenuFocusController" Visibility="Collapsed">
			<Label.IsEnabled>
				<MultiBinding Converter="{l:AndOperationConverter}">
					<Binding ElementName="uiGridMenu"       Path="IsHitTestVisible" />
					<Binding ElementName="uiGridClear"      Path="IsHitTestVisible" Converter="{l:NegateBooleanConverter}" />
					<Binding ElementName="uiGridRandom"     Path="IsHitTestVisible" Converter="{l:NegateBooleanConverter}" />
					<Binding ElementName="uiGridStats"      Path="IsHitTestVisible" Converter="{l:NegateBooleanConverter}" />
					<Binding ElementName="uiGridAbout"      Path="IsHitTestVisible" Converter="{l:NegateBooleanConverter}" />
					<Binding ElementName="uiLineGraphStats" Path="IsHitTestVisible" Converter="{l:NegateBooleanConverter}" />
				</MultiBinding>
			</Label.IsEnabled>
		</Label>
		
		<Canvas Name="uiCanvasBackground" Background="#FF1A4080" />
		
		<l:GraphScrollViewer x:Name="uiGraphScrollViewer" Style="{StaticResource uiStyleScrollViewer}">
			<l:GraphCanvas x:Name="uiGraphCanvas" MouseDown="ActionMouseDown" Background="#201A4080" FocusVisualStyle="{x:Null}"
				Focusable="{Binding ElementName=uiGridMenu, Path=IsHitTestVisible, Converter={l:NegateBooleanConverter}}" Width="5000" Height="5000" />
		</l:GraphScrollViewer>
		
		<ToggleButton Name="uiButtonExpand" Click="ActionMenuButton" Style="{StaticResource uiStyleExpand}"
					  HorizontalAlignment="Right" VerticalAlignment="Top" Margin="10" IsHitTestVisible="False"
					  Opacity="0" Focusable="{Binding ElementName=uiMenuFocusController, Path=IsEnabled}" />
		
		<Button Name="uiButtonAbout" Click="ActionMenuButton" Style="{StaticResource uiStyleAbout}"
				HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10" IsHitTestVisible="False"
				Opacity="0" Focusable="{Binding ElementName=uiMenuFocusController, Path=IsEnabled}" />
		
		<l:LineGraph x:Name="uiLineGraphStats" Opacity="0" Margin="100, 100, 100, 100"
					 MaxWidth="1100" MaxHeight="735" IsHitTestVisible="False">
			
			<l:LineGraph.RenderTransform>
				<TranslateTransform />
			</l:LineGraph.RenderTransform>
			
		</l:LineGraph>
		
		
		
		<!--///////////////////////////////////////////////////////////////////////
		// Main Menu                                                             //
		////////////////////////////////////////////////////////////////////////-->
		
		<Grid Name="uiGridMenu" Height="75" VerticalAlignment="Bottom"
			  RenderTransformOrigin="0.5, 0.5" IsHitTestVisible="False">
			
			<Grid.RenderTransform>
				<TranslateTransform Y="75"/>
			</Grid.RenderTransform>
			
			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>
			
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="90" />
				<ColumnDefinition Width="*"  />
				<ColumnDefinition Width="90" />
				<ColumnDefinition Width="90" />
				<ColumnDefinition Width="90" />
				<ColumnDefinition Width="90" />
			</Grid.ColumnDefinitions>
			
			<Border Grid.RowSpan="2" Grid.ColumnSpan="6" Background="#80102040"
					BorderBrush="#A8102040" BorderThickness="0, 2, 0, 0" />
			
			<Label Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center" Opacity="0.8" FontSize="12"
				   Foreground="White" VerticalAlignment="Center" Name="uiLabelClear" Content="Remove All" />
			<Label Grid.Row="1" Grid.Column="2" HorizontalAlignment="Center" Opacity="0.8" FontSize="12"
				   Foreground="White" VerticalAlignment="Center" Name="uiLabelShort" Content="Shortest Path" />
			<Label Grid.Row="1" Grid.Column="3" HorizontalAlignment="Center" Opacity="0.8" FontSize="12"
				   Foreground="White" VerticalAlignment="Center" Name="uiLabelGraph" Content="Graph View" />
			<Label Grid.Row="1" Grid.Column="4" HorizontalAlignment="Center" Opacity="0.8" FontSize="12"
				   Foreground="White" VerticalAlignment="Center" Name="uiLabelStats" Content="Statistics" />
			<Label Grid.Row="1" Grid.Column="5" HorizontalAlignment="Center" Opacity="0.8" FontSize="12"
				   Foreground="White" VerticalAlignment="Center" Name="uiLabelRandom" Content="Randomize" />
			
			<Button Grid.Column="0" Name="uiButtonClear"  Margin="-6" Click="ActionMenuButton"
					Opacity="0.8" VerticalAlignment="Bottom" Style="{StaticResource uiStyleClear}"
					Focusable="{Binding ElementName=uiMenuFocusController, Path=IsEnabled}" />
			
			<ToggleButton Grid.Column="2" Name="uiButtonShort"  Margin="-6" Click="ActionMenuButton"
						  Opacity="0.8" VerticalAlignment="Bottom" Style="{StaticResource uiStyleShort}"
						  Focusable="{Binding ElementName=uiMenuFocusController, Path=IsEnabled}" />
			
			<ToggleButton Grid.Column="3" Name="uiButtonGraph"  Margin="-6" Click="ActionMenuButton"
						  Opacity="0.8" VerticalAlignment="Bottom" Style="{StaticResource uiStyleGraph}"
						  Focusable="{Binding ElementName=uiMenuFocusController, Path=IsEnabled}" />
			
			<Button Grid.Column="4" Name="uiButtonStats" Margin="-6" Click="ActionMenuButton"
					Opacity="0.8" VerticalAlignment="Bottom" Style="{StaticResource uiStyleStats}"
					Focusable="{Binding ElementName=uiMenuFocusController, Path=IsEnabled}" />
			
			<Button Grid.Column="5" Name="uiButtonRandom" Margin="-6" Click="ActionMenuButton"
					Opacity="0.8" VerticalAlignment="Bottom" Style="{StaticResource uiStyleRandom}"
					Focusable="{Binding ElementName=uiMenuFocusController, Path=IsEnabled}" />
		</Grid>
		
		
		
		<!--///////////////////////////////////////////////////////////////////////
		// Modify Menu                                                           //
		////////////////////////////////////////////////////////////////////////-->
		
		<Grid Name="uiGridModify" VerticalAlignment="Top" Height="50"
			  RenderTransformOrigin="0.5, 0.5" IsHitTestVisible="False">
			
			<Grid.RenderTransform>
				<TranslateTransform Y="-50"/>
			</Grid.RenderTransform>
			
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			
			<Border Grid.ColumnSpan="5" Background="#80102040" BorderBrush="#A8102040" BorderThickness="0, 0, 0, 2" />
			
			<l:ModifyTextBox Grid.Column="0" Margin="10, 10,  5, 10" x:Name="uiTextBoxActiveAngle"
							 Description="Angle" Minimum="0" Maximum="360" ValueChanged="ActionValueChanged" />
			
			<l:ModifyTextBox Grid.Column="1" Margin=" 5, 10,  5, 10" x:Name="uiTextBoxActiveRange"
							 Description="Range" Minimum="0" Maximum="1000" ValueChanged="ActionValueChanged" />
			
			<l:ModifyTextBox Grid.Column="2" Margin=" 5, 10, 10, 10" x:Name="uiTextBoxActiveOrient" Wrap="True"
							 Description="Orientation" Minimum="0" Maximum="360" ValueChanged="ActionValueChanged" />
			
		</Grid>
		
		
		
		<!--///////////////////////////////////////////////////////////////////////
		// Clear Menu                                                            //
		////////////////////////////////////////////////////////////////////////-->
		
		<Grid Name="uiGridAbout" IsHitTestVisible="False" Opacity="0"
			  HorizontalAlignment="Center" VerticalAlignment="Center">
			
			<Grid.RenderTransform>
				<TranslateTransform />
			</Grid.RenderTransform>
				
			<Grid.RowDefinitions>
				<RowDefinition Height="*"  />
				<RowDefinition Height="50" />
			</Grid.RowDefinitions>
			
			<Button Grid.Row="0" Click="ActionMenuButton" Style="{StaticResource uiStyleChromelessButton}"
					Name="uiButtonImage" Focusable="{Binding ElementName=uiGridAbout, Path=IsHitTestVisible}">
				<Image Width="300" Source="../Resources/Graphics/Logo.png" />
			</Button>
				
			<Label Grid.Row="1" Foreground="White" Content="(C) 2011-2013 D. Krutsko and A. Shukla"
					HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" />
		</Grid>
		
		
		
		<!--///////////////////////////////////////////////////////////////////////
		// Clear Menu                                                            //
		////////////////////////////////////////////////////////////////////////-->
		
		<Grid Name="uiGridClear" Margin="20, 0, 0, 95" IsHitTestVisible="False"
			  HorizontalAlignment="Left" VerticalAlignment="Bottom" Opacity="0">
			
			<Grid.RenderTransform>
				<TranslateTransform />
			</Grid.RenderTransform>
			
			<Border BorderThickness="2" Background="#80102040" BorderBrush="#A8102040" />
			
			<Grid Margin="20">
				
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="*"    />
				</Grid.RowDefinitions>
			
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
			
				<Label Grid.ColumnSpan="2" Foreground="White" FontSize="14" Margin="0, 0, 0, 15" Content="Are you sure?" />
			
				<Button Grid.Row="1" Grid.Column="0" Name="uiButtonYes" Content="Yes"
						Width="100" Height="30" Margin=" 0, 0, 10, 0" Click="ActionMenuButton"
						Focusable="{Binding ElementName=uiGridClear, Path=IsHitTestVisible}" />
				
				<Button Grid.Row="1" Grid.Column="1" Name="uiButtonNo" Content="No"
						Width="100" Height="30" Margin="10, 0,  0, 0" Click="ActionMenuButton"
						Focusable="{Binding ElementName=uiGridClear, Path=IsHitTestVisible}" />
				
			</Grid>
		</Grid>
		
		
		
		<!--///////////////////////////////////////////////////////////////////////
		// Random Menu                                                           //
		////////////////////////////////////////////////////////////////////////-->
		
		<Grid Name="uiGridRandom" Margin="0, 0, 20, 95" IsHitTestVisible="False"
			  HorizontalAlignment="Right" VerticalAlignment="Bottom" Opacity="0">
			
			<Grid.RenderTransform>
				<TranslateTransform />
			</Grid.RenderTransform>
			
			<Border BorderThickness="2" Background="#80102040" BorderBrush="#A8102040" />
			
			<Grid Margin="20">
				
				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
					<RowDefinition Height="*" />
					<RowDefinition Height="*" />
					<RowDefinition Height="*" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>
			
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
			
				<Label Grid.Row="0" HorizontalAlignment="Right" Foreground="White"
					   FontSize="14" Margin="0, 0, 10, 10" Content="Sensors" />
				<Label Grid.Row="1" HorizontalAlignment="Right" Foreground="White"
					   FontSize="14" Margin="0, 0, 10, 10" Content="Angle"   />
				<Label Grid.Row="2" HorizontalAlignment="Right" Foreground="White"
					   FontSize="14" Margin="0, 0, 10, 10" Content="Orient"  />
				<Label Grid.Row="3" HorizontalAlignment="Right" Foreground="White"
					   FontSize="14" Margin="0, 0, 10, 10" Content="Range"   />
			
				<l:MetroTextBox Grid.Row="0" Grid.Column="1" Description="Number of Sensors" Width="200" Height="30"
								PreviewKeyUp="ActionRandomKeyUp" VerticalAlignment="Top" x:Name="uiTextBoxRandomSensors"
								Focusable="{Binding ElementName=uiGridRandom, Path=IsHitTestVisible}" />
				
				<l:MetroTextBox Grid.Row="1" Grid.Column="1" Description="Angles of Sensors" Width="200" Height="30"
								PreviewKeyUp="ActionRandomKeyUp" VerticalAlignment="Top" x:Name="uiTextBoxRandomAngle"
								Focusable="{Binding ElementName=uiGridRandom, Path=IsHitTestVisible}" />
				
				<l:MetroTextBox Grid.Row="2" Grid.Column="1" Description="Sensor Orientations" Width="200" Height="30"
								PreviewKeyUp="ActionRandomKeyUp" VerticalAlignment="Top" x:Name="uiTextBoxRandomOrient"
								Focusable="{Binding ElementName=uiGridRandom, Path=IsHitTestVisible}" />
				
				<l:MetroTextBox Grid.Row="3" Grid.Column="1" Description="Ranges of Sensors" Width="200" Height="30"
								PreviewKeyUp="ActionRandomKeyUp" VerticalAlignment="Top" x:Name="uiTextBoxRandomRange"
								Focusable="{Binding ElementName=uiGridRandom, Path=IsHitTestVisible}" />
				
				<Button Grid.Row="4" Grid.ColumnSpan="2" Name="uiButtonRandomDone" HorizontalAlignment="Right"
						Width="120" Height="30" Margin="10, 0, 0, 0" Content="Done" Click="ActionMenuButton"
						Focusable="{Binding ElementName=uiGridRandom, Path=IsHitTestVisible}" />
				
			</Grid>
		</Grid>
		
		
		
		<!--///////////////////////////////////////////////////////////////////////
		// Stats Menu                                                            //
		////////////////////////////////////////////////////////////////////////-->
		
		<Grid Name="uiGridStats" Margin="0, 0, 20, 95" IsHitTestVisible="False"
			  HorizontalAlignment="Right" VerticalAlignment="Bottom" Opacity="0">
			
			<Grid.RenderTransform>
				<TranslateTransform />
			</Grid.RenderTransform>
			
			<Border BorderThickness="2" Background="#80102040" BorderBrush="#A8102040" />
			
			<Grid Margin="20">
				
				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
					<RowDefinition Height="*" />
					<RowDefinition Height="*" />
					<RowDefinition Height="*" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>
			
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
			
				<Label Grid.Row="0" HorizontalAlignment="Right" Foreground="White"
					   FontSize="14" Margin="0, 0, 10, 10" Content="Trials" />
				<Label Grid.Row="1" HorizontalAlignment="Right" Foreground="White"
					   FontSize="14" Margin="0, 0, 10, 10" Content="Sensors"   />
				<Label Grid.Row="2" HorizontalAlignment="Right" Foreground="White"
					   FontSize="14" Margin="0, 0, 10, 10" Content="Angle"  />
				<Label Grid.Row="3" HorizontalAlignment="Right" Foreground="White"
					   FontSize="14" Margin="0, 0, 10, 10" Content="Range"   />
			
				<l:MetroTextBox Grid.Row="0" Grid.Column="1" Description="Number of Trials" Width="200" Height="30"
								PreviewKeyUp="ActionStatsKeyUp" VerticalAlignment="Top" x:Name="uiTextBoxStatsTrials"
								Focusable="{Binding ElementName=uiGridStats, Path=IsHitTestVisible}" />
				
				<l:MetroTextBox Grid.Row="1" Grid.Column="1" Description="Sensors per Iteration" Width="200" Height="30"
								PreviewKeyUp="ActionStatsKeyUp" VerticalAlignment="Top" x:Name="uiTextBoxStatsSensors"
								Focusable="{Binding ElementName=uiGridStats, Path=IsHitTestVisible}" />
				
				<l:MetroTextBox Grid.Row="2" Grid.Column="1" Description="Angle per Iteration" Width="200" Height="30"
								PreviewKeyUp="ActionStatsKeyUp" VerticalAlignment="Top" x:Name="uiTextBoxStatsAngle"
								Focusable="{Binding ElementName=uiGridStats, Path=IsHitTestVisible}" />
				
				<l:MetroTextBox Grid.Row="3" Grid.Column="1" Description="Range per Iteration" Width="200" Height="30"
								PreviewKeyUp="ActionStatsKeyUp" VerticalAlignment="Top" x:Name="uiTextBoxStatsRange"
								Focusable="{Binding ElementName=uiGridStats, Path=IsHitTestVisible}" />
				
				<Button Grid.Row="4" Grid.ColumnSpan="2" Name="uiButtonStatsDone" HorizontalAlignment="Right"
						Width="120" Height="30" Margin="10, 0, 0, 0" Content="Done" Click="ActionMenuButton"
						Focusable="{Binding ElementName=uiGridStats, Path=IsHitTestVisible}" />
				
			</Grid>
		</Grid>
		
	</Grid>
	
</Window>
